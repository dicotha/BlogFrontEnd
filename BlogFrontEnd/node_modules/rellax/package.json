{
  "_args": [
    [
      {
        "raw": "rellax",
        "scope": null,
        "escapedName": "rellax",
        "name": "rellax",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\waldir.bertuqui\\Desktop\\html pages\\Blog\\BlogFrontEnd"
    ]
  ],
  "_from": "rellax@latest",
  "_id": "rellax@1.5.1",
  "_inCache": true,
  "_location": "/rellax",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rellax_1.5.1_1519230012804_0.5430989039110607"
  },
  "_npmUser": {
    "name": "moeamaya",
    "email": "moe@dixonandmoe.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rellax",
    "scope": null,
    "escapedName": "rellax",
    "name": "rellax",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/rellax/-/rellax-1.5.1.tgz",
  "_shasum": "a469c50c70fd973960afc29c8041626d33b257ad",
  "_shrinkwrap": null,
  "_spec": "rellax",
  "_where": "C:\\Users\\waldir.bertuqui\\Desktop\\html pages\\Blog\\BlogFrontEnd",
  "author": {
    "name": "Moe Amaya",
    "email": "moe@dixonandmoe.com",
    "url": "https://dixonandmoe.com"
  },
  "bugs": {
    "url": "https://github.com/dixonandmoe/rellax/issues"
  },
  "dependencies": {},
  "description": "Lightweight, vanilla javascript parallax library",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-PMGpD1fF+EMtCE8I9MIvrN5GoNn5IQzKa4HbeJ7fQmEKouU9/EjM1jsInfq3Xp/JqXEoi86AyfEIltbeKXD5CA==",
    "shasum": "a469c50c70fd973960afc29c8041626d33b257ad",
    "tarball": "https://registry.npmjs.org/rellax/-/rellax-1.5.1.tgz",
    "fileCount": 14,
    "unpackedSize": 170939
  },
  "gitHead": "086d97ed3507e6b3d6dc7448a6f76d72a877b55c",
  "homepage": "https://dixonandmoe.com/rellax/",
  "keywords": [
    "parallax"
  ],
  "license": "MIT",
  "main": "rellax.js",
  "maintainers": [
    {
      "name": "moeamaya",
      "email": "moe@dixonandmoe.com"
    }
  ],
  "name": "rellax",
  "optionalDependencies": {},
  "readme": "# RELLAX\n\nRellax is a buttery smooth, super lightweight (1021bytes gzipped), vanilla javascript parallax library. **Update:** Rellax now works on mobile (v1.0.0). \n\n* [Demo Website](https://dixonandmoe.com/rellax/)\n\nHave any suggestions or feedback? Reach out [@dixonandmoe](https://twitter.com/dixonandmoe)\n\n## Getting Started\n`npm install rellax --save` or if you're old school like us download and insert `rellax.min.js`\n\n```html\n<div class=\"rellax\">\n  I‚Äôm that default chill speed of \"-2\"\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\">\n  I‚Äôm super fast!!\n</div>\n<div class=\"rellax\" data-rellax-speed=\"-4\">\n  I‚Äôm extra slow and smooth\n</div>\n\n<script src=\"rellax.min.js\"></script>\n<script>\n  // Accepts any class name\n  var rellax = new Rellax('.rellax');\n</script>\n```\n```html\n<script>\n  // Also can pass in optional settings block\n  var rellax = new Rellax('.rellax', {\n    speed: -2,\n    center: false,\n    round: true,\n    vertical: true,\n    horizontal: false\n  });\n</script>\n```\n## Features\n\n### Speed\nUse the `data-rellax-speed` attribute to set the speed of a `.rellax` element to something other than the default value (which is `-2`). A negative value will make it move slower than regular scrolling, and a positive value will make it move faster. We recommend keeping the speed between `-10` and `10`.\n\n### Centering\nAfter some fantastic work from [@p-realinho](https://github.com/p-realinho), we just released the ability to center parallax elements in your viewport! We'll be building a nice demo website, but for now check out the tests folder for several examples of how it works.\n\nThere's two ways to implement centering, either on specific elements or as a global option.\n```html\n<div class=\"rellax\" data-rellax-percentage=\"0.5\">\n  I‚Äôm that default chill speed of \"-2\" and \"centered\"\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\" data-rellax-percentage=\"0.5\">\n  I‚Äôm super fast!! And super centered!!\n</div>\n<div class=\"rellax\" data-rellax-speed=\"-4\" data-rellax-percentage=\"0.5\">\n  I‚Äôm extra slow and smooth, and hella centered.\n</div>\n```\n```html\n<script>\n  // Center all the things!\n  var rellax = new Rellax('.rellax', {\n    center: true\n  });\n</script>\n```\n\n### z-index\nIf you want to sort your elements properly in the Z space, you can use the data-rellax-zindex property\n```html\n<div class=\"rellax\">\n  I‚Äôm that default chill speed of \"-2\" and default z-index of 0\n</div>\n<div class=\"rellax\" data-rellax-speed=\"7\" data-rellax-zindex=\"5\">\n  I‚Äôm super fast!! And on top of the previous element, I'm z-index 5!!\n</div>\n```\n\n### Horizontal Parallax\nHorizontal parallax is disabled by default. You can enable it by passing `horizontal: true` in the settings block.\nThis feature is intended for panoramic style websites, where users scroll horizontally instead of vertically.\nNote that this can work together at the same time with the default vertical parallax. If you do not want this, pass `vertical: false` in the settings block.\n\n### Destroy\n```html\n<script>\n  // Start Rellax\n  var rellax = new Rellax('.rellax');\n  \n  // End Rellax and reset parallax elements to their original positions\n  rellax.destroy();\n</script>\n```\n\n### Callback\n```html\n<script>\n  // Start Rellax\n  var rellax = new Rellax('.rellax-blur-card', {\n    callback: function(positions) {\n      // callback every position change\n      console.log(positions);\n    }\n  });\n</script>\n```\n\n### Target node\nInstead of using a className you can use a node, handy when using React and you want to use `refs` instead of `className`.\n```jsx\n<div ref={ref => { this.rellaxRef = ref }}>\n  I‚Äôm that default chill speed of \"-2\"\n</div>\n\nvar rellax = new Rellax(this.rellaxRef)\n```\n\n## In the Wild\nIf you're using Rellax in production, we'd love to list you here! Let us know: moe@dixonandmoe.com\n- [Microsoft Fluent](https://fluent.microsoft.com/)\n- [Gucci Gift](http://gift.gucci.com/)\n- [Finch](https://finch.io/)\n- [Product Designer in San Francisco](https://moeamaya.com/)\n- [EthWorks](http://ethworks.io/)\n- [Airgora](https://www.airgora.com/competition)\n- [Lorem Ipsum Generator](https://loremipsumgenerator.com/)\n- [Alex Bailon Portfolio](http://www.iambailon.com/)\n- [Terry Design](http://terrydesign.co.uk/)\n- [The Rixey](http://www.livetherixey.com/)\n- [Laws of UX](https://lawsofux.com/)\n- [Deesen](https://www.deeson.co.uk/)\n\nLearn Rellax and other web animation skills with a course on [CSS Animation Rocks](http://courses.cssanimation.rocks/p/level-up)\n\n## Development\nIn the spirit of lightweight javascript, the build processes (thus far) is lightweight also.\n\n1. Open demo.html\n2. Make code changes and refresh browser\n3. Once feature is finished or bug fixed, use [jshint](http://jshint.com/) to lint code\n4. Fix lint issues then use [Google Closure Compiler](https://closure-compiler.appspot.com/home) to minify\n5. üçª\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dixonandmoe/rellax.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.5.1"
}
